{"ast":null,"code":"var _jsxFileName = \"/home/komal/Github/typescriptapp/src/states/Todo.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = () => {\n  _s();\n  const [todo, setTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const handleClick = () => {\n    setTodos([...todos, todo]);\n  };\n  const handleChange = e => {\n    setTodo();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), todos.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 31\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todo,\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(Todo, \"7DKd7CJCdxVY/pQjjQ6xII7vyb4=\");\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Todo","_s","todo","setTodo","todos","setTodos","handleClick","handleChange","e","children","fileName","_jsxFileName","lineNumber","columnNumber","map","data","type","value","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/komal/Github/typescriptapp/src/states/Todo.tsx"],"sourcesContent":["import {useState} from 'react'\n\n export const Todo = () => {\n    const [todo, setTodo] = useState<string>(\"\")\n    const [todos, setTodos] = useState<string[]>([])\n    const handleClick = () => {\n        setTodos([...todos, todo])\n\n    }\n    const handleChange = (e:React.ChangeEvent<HTMLInputElement>) => {\n     setTodo()\n\n    }\n    return(\n       \n        <div>\n            <h1>Todos</h1>\n           {todos.map(data => <li>{data}</li>)}\n            <input type = \"text\" value = {todo} onChange = { e =>handleChange(e)}/>\n\n            <button onClick = {handleClick}>Add</button>\n        </div>\n\n\n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAChD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEF,IAAI,CAAC,CAAC;EAE9B,CAAC;EACD,MAAMK,YAAY,GAAIC,CAAqC,IAAK;IAC/DL,OAAO,CAAC,CAAC;EAEV,CAAC;EACD,oBAEIJ,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACdT,KAAK,CAACU,GAAG,CAACC,IAAI,iBAAIhB,OAAA;MAAAU,QAAA,EAAKM;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,eAClCd,OAAA;MAAOiB,IAAI,EAAG,MAAM;MAACC,KAAK,EAAIf,IAAK;MAACgB,QAAQ,EAAKV,CAAC,IAAGD,YAAY,CAACC,CAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEvEd,OAAA;MAAQoB,OAAO,EAAIb,WAAY;MAAAG,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAId,CAAC;AAAAZ,EAAA,CAvBaD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}